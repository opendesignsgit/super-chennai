/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {
    chennaiInvestments: ChennaiInvestments;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    visits: Visit;
    work: Work;
    events: Event;
    investments: Investment;
    live: Live;
    volunteer: Volunteer;
    innovate: Innovate;
    visitDetails: VisitDetail;
    volunteerSlides: VolunteerSlide;
    'social-reels': SocialReel;
    'investment-categories': InvestmentCategory;
    visitGroups: VisitGroup;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    visits: VisitsSelect<false> | VisitsSelect<true>;
    work: WorkSelect<false> | WorkSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    investments: InvestmentsSelect<false> | InvestmentsSelect<true>;
    live: LiveSelect<false> | LiveSelect<true>;
    volunteer: VolunteerSelect<false> | VolunteerSelect<true>;
    innovate: InnovateSelect<false> | InnovateSelect<true>;
    visitDetails: VisitDetailsSelect<false> | VisitDetailsSelect<true>;
    volunteerSlides: VolunteerSlidesSelect<false> | VolunteerSlidesSelect<true>;
    'social-reels': SocialReelsSelect<false> | SocialReelsSelect<true>;
    'investment-categories': InvestmentCategoriesSelect<false> | InvestmentCategoriesSelect<true>;
    visitGroups: VisitGroupsSelect<false> | VisitGroupsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "chennaiInvestments".
 */
export interface ChennaiInvestments {
  /**
   * Maximum 30 characters allowed
   */
  heading: string;
  /**
   * Maximum 400 characters allowed
   */
  subheading?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'chennaiInvestments';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    /**
     * Choose the type of hero banner to display. Select "None" to hide the banner.
     */
    type: 'none' | 'Defult';
    heading?: string | null;
    image?: (number | null) | Media;
    backgroundColor?:
      | ('gradient-1' | 'gradient-2' | 'gradient-3' | 'gradient-4' | 'gradient-5' | 'gradient-6' | 'gradient-7')
      | null;
    links?:
      | {
          link: {
            /**
             * Upload the header Content image.
             */
            contentImage?: (number | null) | Media;
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
            content?:
              | {
                  title?: string | null;
                  desc?: string | null;
                  link?: string | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | {
        cards: {
          /**
           * Maximum 15 characters allowed
           */
          title: string;
          /**
           * Maximum 100 characters allowed
           */
          place: string;
          image: number | Media;
          page?: (number | null) | Visit;
          /**
           * This will override the selected page link if provided.
           */
          customLink?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'explore';
      }
    | {
        /**
         * Maximum 100 characters allowed
         */
        heading: string;
        /**
         * Maximum 500 characters allowed
         */
        subheading: string;
        cards: {
          /**
           * Maximum 100 characters allowed
           */
          title: string;
          /**
           * Maximum 100 characters allowed
           */
          place?: string | null;
          image: number | Media;
          page?: (number | null) | Visit;
          /**
           * This will override the selected page link if provided.
           */
          customLink?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'funChennai';
      }
    | {
        /**
         * Maximum 30 characters allowed
         */
        heading?: string | null;
        /**
         * Maximum 400 characters allowed
         */
        description?: string | null;
        images?:
          | {
              image?: (number | null) | Media;
              /**
               * Maximum 20 characters allowed
               */
              title: string;
              /**
               * Maximum 50 characters allowed
               */
              description?: string | null;
              page?: (number | null) | Investment;
              /**
               * This will override the selected page link if provided.
               */
              customLink?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'startupChennai';
      }
    | {
        /**
         * Maximum 30 characters allowed
         */
        heading: string;
        /**
         * Maximum 400 characters allowed
         */
        subheading?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'chennaiInvestments';
      }
    | {
        /**
         * Maximum 100 characters allowed
         */
        heading?: string | null;
        /**
         * Maximum 400 characters allowed
         */
        description?: string | null;
        /**
         * Select whether to display videos or images in the slider
         */
        contentType: 'video' | 'image';
        /**
         * If enabled, videos will be shown as thumbnails only without autoplay/play buttons.
         */
        showVideoThumbnailOnly?: boolean | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'socialReelSlider';
      }
    | {
        /**
         * Short heading (max 100 characters)
         */
        heading?: string | null;
        /**
         * Main title (max 100 characters)
         */
        title?: string | null;
        /**
         * Short description (max 600 characters)
         */
        description?: string | null;
        page?: (number | null) | Page;
        /**
         * This will override the selected page link if provided.
         */
        customLink?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'becameAVolunteer';
      }
    | {
        /**
         * Maximum 50 characters allowed
         */
        heading?: string | null;
        /**
         * Maximum 200 characters allowed
         */
        description?: string | null;
        /**
         * Choose the appropriate Events page from the dropdown that lists all available Pages.
         */
        page?: (number | null) | Page;
        id?: string | null;
        blockName?: string | null;
        blockType: 'eventsCalendar';
      }
    | {
        slides: {
          image: number | Media;
          title?: string | null;
          description?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'heroSliderBlock';
      }
    | {
        /**
         * Maximum 100 characters allowed
         */
        title: string;
        /**
         * Maximum 800 characters allowed
         */
        description?: string | null;
        items?:
          | {
              /**
               * Maximum 200 characters allowed
               */
              label: string;
              /**
               * Maximum 800 characters allowed
               */
              description?: string | null;
              image: number | Media;
              page?: (number | null) | Visit;
              /**
               * This will override the selected page link if provided.
               */
              customLink?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'visitcategory';
      }
    | {
        sections: {
          title: string;
          description: string;
          image: number | Media;
          linkUrl?: string | null;
          linkText?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'ZigZagContent';
      }
    | {
        /**
         * Maximum 200 characters allowed
         */
        sectionTitle: string;
        /**
         * Maximum 600 characters allowed
         */
        sectionDescription: string;
        buttonText: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'volunteerBecameSection';
      }
    | {
        heading: string;
        image: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'Banner';
      }
    | {
        /**
         * Maximum 50 characters allowed
         */
        heading: string;
        image: number | Media;
        backgroundColor?:
          | ('gradient-1' | 'gradient-2' | 'gradient-3' | 'gradient-4' | 'gradient-5' | 'gradient-6')
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mainPageBanner';
      }
    | {
        showMarquee?: boolean | null;
        /**
         * Maximum 50 characters allowed
         */
        marqueeText?: string | null;
        marqueeTextSize?: ('sm' | 'lg') | null;
        /**
         * Maximum 50 characters allowed
         */
        title: string;
        /**
         * Maximum 400 characters allowed
         */
        highlightedText: string;
        /**
         * Maximum 800 characters allowed
         */
        description: string;
        backgroundType: 'none' | 'background';
        id?: string | null;
        blockName?: string | null;
        blockType: 'introTextBlock';
      }
    | {
        placeholderText: string;
        buttonText: string;
        enableFilters?: boolean | null;
        filters?:
          | {
              label: string;
              options?:
                | {
                    value: string;
                    label: string;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'globalSearch';
      }
    | {
        heading: string;
        description?: string | null;
        buttonText?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'formPopup';
      }
    | {
        /**
         * Maximum 100 characters allowed
         */
        heading: string;
        /**
         * Maximum 100 characters allowed
         */
        headingSpan: string;
        /**
         * Maximum 500 characters allowed
         */
        description: string;
        foodItems: {
          /**
           * Maximum 100 characters allowed
           */
          title: string;
          /**
           * Maximum 500 characters allowed
           */
          description: string;
          image: number | Media;
          /**
           * 📄 Select the Visits page to link to. This will be used in the URL.
           */
          page?: (number | null) | Visit;
          /**
           * 🔗 This will scroll to a section within the selected page. Must exactly match a title in the "featureSectionSplit" block of that page. Final URL becomes: /visits/[page]/#[FoodTitle]
           */
          foodSectionTitle?: string | null;
          /**
           * This will override the selected page link if provided.
           */
          customLink?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'infography';
      }
    | {
        techImage: number | Media;
        /**
         * Maximum 30 characters allowed
         */
        techTitle: string;
        /**
         * Maximum 200 characters allowed
         */
        techDescription: string;
        eduImage: number | Media;
        /**
         * Maximum 30 characters allowed
         */
        eduTitle: string;
        /**
         * Maximum 200 characters allowed
         */
        eduDescription: string;
        techLink?: {
          url?: string | null;
          page?: (number | null) | Page;
        };
        eduLink?: {
          url?: string | null;
          page?: (number | null) | Page;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'twoColumnFeatureBlock';
      }
    | {
        /**
         * Maximum 50 characters allowed
         */
        title: string;
        /**
         * Maximum 200 characters allowed
         */
        description?: string | null;
        tabs: {
          /**
           * Maximum 20 characters allowed
           */
          tabTitle: string;
          image: number | Media;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'utilities';
      }
    | {
        /**
         * Maximum 15 characters allowed
         */
        heading: string;
        /**
         * Maximum 15 characters allowed
         */
        subheading?: string | null;
        /**
         * Maximum 200 characters allowed
         */
        description?: string | null;
        cards: {
          title: string;
          /**
           * Maximum 200 characters allowed
           */
          description?: string | null;
          image: number | Media;
          /**
           * Optional external URL. If "Page Link" is also set, it will be ignored.
           */
          url?: string | null;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'contentZoneCarousel';
      }
    | {
        /**
         * Maximum 20 characters allowed
         */
        heading: string;
        /**
         * Maximum 500 characters allowed
         */
        description: string;
        link?: string | null;
        items?:
          | {
              /**
               * Maximum 15 characters allowed
               */
              name: string;
              /**
               * Maximum 15 characters allowed
               */
              subtitle?: string | null;
              /**
               * Maximum 200 characters allowed
               */
              para?: string | null;
              image: number | Media;
              page?: (number | null) | Event;
              /**
               * This will override the selected page link if provided.
               */
              customLink?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'spotlightGallery';
      }
    | {
        /**
         * Maximum 15 characters allowed
         */
        title: string;
        /**
         * Maximum 400 characters allowed
         */
        description?: string | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'allevents';
      }
    | {
        /**
         * Maximum 50 characters allowed
         */
        heading: string;
        imagePosition: 'left' | 'right';
        image: number | Media;
        /**
         * Maximum 500 characters allowed
         */
        paraZeroLiveSection: string;
        /**
         * Maximum 500 characters allowed
         */
        paraoneLiveSection: string;
        /**
         * Maximum 500 characters allowed
         */
        paraTwoLiveSection: string;
        showMarquee?: boolean | null;
        /**
         * Maximum 200 characters allowed
         */
        marqueeText?: string | null;
        marqueeTextSize?: ('sm' | 'lg') | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'liveIntrorSection';
      }
    | {
        /**
         * Maximum 15 characters allowed
         */
        heading: string;
        /**
         * Maximum 500 characters allowed
         */
        description: string;
        essentials?:
          | {
              /**
               * Maximum 500 characters allowed
               */
              text: string;
              page?: (number | null) | Live;
              image: number | Media;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'chennaiLifeEssentials';
      }
    | {
        items: {
          /**
           * Maximum 30 characters allowed
           */
          title: string;
          /**
           * Maximum 30 characters allowed
           */
          subtitle?: string | null;
          /**
           * Maximum 400 characters allowed
           */
          description?: string | null;
          /**
           * Upload an SVG file only.
           */
          image?: (number | null) | Media;
          link?: string | null;
          id?: string | null;
        }[];
        backgroundImage?: (number | null) | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'investmentCategoryList';
      }
    | {
        id?: string | null;
        blockName?: string | null;
        blockType: 'innovateSlider';
      }
    | {
        /**
         * Maximum 100 characters allowed
         */
        title: string;
        items: {
          /**
           * Maximum 100 characters allowed
           */
          label: string;
          page?: (number | null) | Work;
          /**
           * This will override the selected page link if provided.
           */
          customLink?: string | null;
          image: number | Media;
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'textHoverImageSection';
      }
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visits".
 */
export interface Visit {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  /**
   * This image will be used as the featured image for Slides.
   */
  FeaturedImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedvisits?: (number | Visit)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "investments".
 */
export interface Investment {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  /**
   * This image will be used as the featured image for Slides.
   */
  FeaturedImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedinvestments?: (number | Investment)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  investments?:
    | {
        /**
         * Maximum 100 characters allowed
         */
        sectionTitle: string;
        /**
         * Maximum 500 characters allowed
         */
        sectionDescription?: string | null;
        sectionImage?: (number | null) | Media;
        investmentItems?:
          | {
              /**
               * Maximum 100 characters allowed
               */
              title: string;
              /**
               * Maximum 500 characters allowed
               */
              description?: string | null;
              image?: (number | null) | Media;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  title: string;
  /**
   * Only one event can be featured at a time.
   */
  isFeatured?: boolean | null;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  event: {
    image: number | Media;
    /**
     * Upload an image of the performing artist
     */
    artistImage?: (number | null) | Media;
    /**
     * Maximum 100 characters
     */
    singerName?: string | null;
    /**
     * Specify the role/designation of the artist in the event
     */
    artistDesignation?: string | null;
    /**
     * Maximum 200 characters allowed
     */
    title: string;
    /**
     * Maximum 200 characters allowed
     */
    description?: string | null;
    /**
     * Choose full date (day, month, year)
     */
    eventDate: string;
    /**
     * Maximum 30 characters allowed
     */
    performerRole?: string | null;
    details?: {
      duration?: string | null;
      ageLimit?: string | null;
      language?: string | null;
      genre?: string | null;
      location?: string | null;
    };
    /**
     * Choose the category of the event
     */
    category:
      | 'music'
      | 'workshop'
      | 'festival'
      | 'concert'
      | 'comedy'
      | 'theatre'
      | 'exhibition'
      | 'sports'
      | 'dance'
      | 'film_screening'
      | 'conference'
      | 'meetup'
      | 'networking'
      | 'startup_event'
      | 'hackathon'
      | 'art_culture'
      | 'charity'
      | 'talks'
      | 'seminar'
      | 'webinar'
      | 'kids_family'
      | 'food_drink'
      | 'culinary_workshop'
      | 'book_reading'
      | 'literature'
      | 'spiritual'
      | 'fashion'
      | 'education'
      | 'technology'
      | 'health_wellness'
      | 'yoga_meditation'
      | 'photography'
      | 'design'
      | 'gaming'
      | 'esports'
      | 'motivational_talk'
      | 'pet_animal'
      | 'gardening'
      | 'sustainability'
      | 'travel_adventure'
      | 'automobile'
      | 'magic_show'
      | 'standup_comedy'
      | 'open_mic'
      | 'pageant'
      | 'film_festival'
      | 'virtual_reality'
      | 'ai_data_science'
      | 'coding_bootcamp'
      | 'career_fair'
      | 'job_fair'
      | 'real_estate_expo'
      | 'startup_pitch'
      | 'investor_meet'
      | 'product_launch'
      | 'panel_discussion'
      | 'tedx_talk'
      | 'book_launch'
      | 'fundraiser'
      | 'award_show'
      | 'carnival'
      | 'parade'
      | 'bridal_show'
      | 'wedding_expo'
      | 'nightlife'
      | 'club_event'
      | 'beach_party'
      | 'cultural_fest'
      | 'alumni_meet'
      | 'orientation'
      | 'convocation'
      | 'independence_day'
      | 'republic_day'
      | 'national_holiday'
      | 'religious'
      | 'temple_event'
      | 'church_gathering'
      | 'ramadan'
      | 'christmas'
      | 'easter'
      | 'diwali'
      | 'pongal'
      | 'onam'
      | 'navaratri'
      | 'durga_puja'
      | 'ganesh_chaturthi'
      | 'holi'
      | 'janmashtami'
      | 'thanksgiving'
      | 'halloween'
      | 'new_year_party'
      | 'valentines_day'
      | 'indigenous_culture'
      | 'language_day'
      | 'heritage_walk'
      | 'skating'
      | 'cycling'
      | 'marathon'
      | 'adventure_sports'
      | 'trekking'
      | 'camping'
      | 'bird_watching'
      | 'zoo_visit'
      | 'aquarium_event'
      | 'science_fair'
      | 'math_olympiad'
      | 'coding_challenge'
      | 'quiz_competition';
    link?: string | null;
    /**
     * Full address or venue location for the event(Maximum 100 characters allowed)
     */
    address?: string | null;
  };
  relatedevents?: (number | Event)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "live".
 */
export interface Live {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  /**
   * This image will be used as the featured image for Slides.
   */
  FeaturedImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedlive?: (number | Live)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work".
 */
export interface Work {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  /**
   * This image will be used as the featured image for Slides.
   */
  FeaturedImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedwork?: (number | Work)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volunteer".
 */
export interface Volunteer {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  image: number | Media;
  /**
   * Maximum 100 characters allowed
   */
  'Voluenteer title': string;
  /**
   * Maximum 400 characters allowed
   */
  subtitle?: string | null;
  /**
   * Maximum 400 characters allowed
   */
  description?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  relatedvolunteer?: (number | Volunteer)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innovate".
 */
export interface Innovate {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  /**
   * This image will be used as the featured image for Slides.
   */
  FeaturedImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Maximum 200 characters allowed
   */
  innovationTitle: string;
  /**
   * Maximum 800 characters allowed
   */
  innovationDescription?: string | null;
  innovationImage?: (number | null) | Media;
  relatedinnovate?: (number | Innovate)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visitDetails".
 */
export interface VisitDetail {
  id: number;
  title: string;
  /**
   * Select parent Visit category (eg: Food, Nature)
   */
  parent: number | Visit;
  heroImage?: (number | null) | Media;
  /**
   * This image will be used as the featured image for Slides.
   */
  FeaturedImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedlive?: (number | VisitDetail)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volunteerSlides".
 */
export interface VolunteerSlide {
  id: number;
  title: string;
  slides?:
    | {
        slug: string;
        image: number | Media;
        title: string;
        subtitle?: string | null;
        description?: string | null;
        detailedContent?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        video?: string | null;
        faq?:
          | {
              question?: string | null;
              answer?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Add custom content for this volunteer slide.
   */
  content?: string | null;
  /**
   * SEO metadata for the volunteer slide.
   */
  seo?: {
    metaTitle?: string | null;
    metaDescription?: string | null;
    metaKeywords?: string | null;
    canonicalUrl?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-reels".
 */
export interface SocialReel {
  id: number;
  title: string;
  reels?:
    | {
        thumbnail: number | Media;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "investment-categories".
 */
export interface InvestmentCategory {
  id: number;
  name: string;
  items?:
    | {
        title: string;
        description?: string | null;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visitGroups".
 */
export interface VisitGroup {
  id: number;
  title: string;
  description?: string | null;
  items?:
    | {
        label: string;
        description?: string | null;
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'pages';
        value: number | Page;
      }
    | {
        relationTo: 'visits';
        value: number | Visit;
      }
    | {
        relationTo: 'work';
        value: number | Work;
      };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'visits';
        value: number | Visit;
      } | null)
    | ({
        relationTo: 'work';
        value: number | Work;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'investments';
        value: number | Investment;
      } | null)
    | ({
        relationTo: 'live';
        value: number | Live;
      } | null)
    | ({
        relationTo: 'volunteer';
        value: number | Volunteer;
      } | null)
    | ({
        relationTo: 'innovate';
        value: number | Innovate;
      } | null)
    | ({
        relationTo: 'visitDetails';
        value: number | VisitDetail;
      } | null)
    | ({
        relationTo: 'volunteerSlides';
        value: number | VolunteerSlide;
      } | null)
    | ({
        relationTo: 'social-reels';
        value: number | SocialReel;
      } | null)
    | ({
        relationTo: 'investment-categories';
        value: number | InvestmentCategory;
      } | null)
    | ({
        relationTo: 'visitGroups';
        value: number | VisitGroup;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        heading?: T;
        image?: T;
        backgroundColor?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    contentImage?: T;
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                    content?:
                      | T
                      | {
                          title?: T;
                          desc?: T;
                          link?: T;
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  layout?:
    | T
    | {
        explore?:
          | T
          | {
              cards?:
                | T
                | {
                    title?: T;
                    place?: T;
                    image?: T;
                    page?: T;
                    customLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        funChennai?:
          | T
          | {
              heading?: T;
              subheading?: T;
              cards?:
                | T
                | {
                    title?: T;
                    place?: T;
                    image?: T;
                    page?: T;
                    customLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        startupChennai?:
          | T
          | {
              heading?: T;
              description?: T;
              images?:
                | T
                | {
                    image?: T;
                    title?: T;
                    description?: T;
                    page?: T;
                    customLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        chennaiInvestments?:
          | T
          | {
              heading?: T;
              subheading?: T;
              id?: T;
              blockName?: T;
            };
        socialReelSlider?:
          | T
          | {
              heading?: T;
              description?: T;
              contentType?: T;
              showVideoThumbnailOnly?: T;
              id?: T;
              blockName?: T;
            };
        becameAVolunteer?:
          | T
          | {
              heading?: T;
              title?: T;
              description?: T;
              page?: T;
              customLink?: T;
              id?: T;
              blockName?: T;
            };
        eventsCalendar?:
          | T
          | {
              heading?: T;
              description?: T;
              page?: T;
              id?: T;
              blockName?: T;
            };
        heroSliderBlock?:
          | T
          | {
              slides?:
                | T
                | {
                    image?: T;
                    title?: T;
                    description?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        visitcategory?:
          | T
          | {
              title?: T;
              description?: T;
              items?:
                | T
                | {
                    label?: T;
                    description?: T;
                    image?: T;
                    page?: T;
                    customLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        ZigZagContent?:
          | T
          | {
              sections?:
                | T
                | {
                    title?: T;
                    description?: T;
                    image?: T;
                    linkUrl?: T;
                    linkText?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        volunteerBecameSection?:
          | T
          | {
              sectionTitle?: T;
              sectionDescription?: T;
              buttonText?: T;
              id?: T;
              blockName?: T;
            };
        Banner?:
          | T
          | {
              heading?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        mainPageBanner?:
          | T
          | {
              heading?: T;
              image?: T;
              backgroundColor?: T;
              id?: T;
              blockName?: T;
            };
        introTextBlock?:
          | T
          | {
              showMarquee?: T;
              marqueeText?: T;
              marqueeTextSize?: T;
              title?: T;
              highlightedText?: T;
              description?: T;
              backgroundType?: T;
              id?: T;
              blockName?: T;
            };
        globalSearch?:
          | T
          | {
              placeholderText?: T;
              buttonText?: T;
              enableFilters?: T;
              filters?:
                | T
                | {
                    label?: T;
                    options?:
                      | T
                      | {
                          value?: T;
                          label?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        formPopup?:
          | T
          | {
              heading?: T;
              description?: T;
              buttonText?: T;
              id?: T;
              blockName?: T;
            };
        infography?:
          | T
          | {
              heading?: T;
              headingSpan?: T;
              description?: T;
              foodItems?:
                | T
                | {
                    title?: T;
                    description?: T;
                    image?: T;
                    page?: T;
                    foodSectionTitle?: T;
                    customLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        twoColumnFeatureBlock?:
          | T
          | {
              techImage?: T;
              techTitle?: T;
              techDescription?: T;
              eduImage?: T;
              eduTitle?: T;
              eduDescription?: T;
              techLink?:
                | T
                | {
                    url?: T;
                    page?: T;
                  };
              eduLink?:
                | T
                | {
                    url?: T;
                    page?: T;
                  };
              id?: T;
              blockName?: T;
            };
        utilities?:
          | T
          | {
              title?: T;
              description?: T;
              tabs?:
                | T
                | {
                    tabTitle?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        contentZoneCarousel?:
          | T
          | {
              heading?: T;
              subheading?: T;
              description?: T;
              cards?:
                | T
                | {
                    title?: T;
                    description?: T;
                    image?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        spotlightGallery?:
          | T
          | {
              heading?: T;
              description?: T;
              link?: T;
              items?:
                | T
                | {
                    name?: T;
                    subtitle?: T;
                    para?: T;
                    image?: T;
                    page?: T;
                    customLink?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        allevents?:
          | T
          | {
              title?: T;
              description?: T;
              id?: T;
              blockName?: T;
            };
        liveIntrorSection?:
          | T
          | {
              heading?: T;
              imagePosition?: T;
              image?: T;
              paraZeroLiveSection?: T;
              paraoneLiveSection?: T;
              paraTwoLiveSection?: T;
              showMarquee?: T;
              marqueeText?: T;
              marqueeTextSize?: T;
              id?: T;
              blockName?: T;
            };
        chennaiLifeEssentials?:
          | T
          | {
              heading?: T;
              description?: T;
              essentials?:
                | T
                | {
                    text?: T;
                    page?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        investmentCategoryList?:
          | T
          | {
              items?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    description?: T;
                    image?: T;
                    link?: T;
                    id?: T;
                  };
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        innovateSlider?:
          | T
          | {
              id?: T;
              blockName?: T;
            };
        textHoverImageSection?:
          | T
          | {
              title?: T;
              items?:
                | T
                | {
                    label?: T;
                    page?: T;
                    customLink?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visits_select".
 */
export interface VisitsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  FeaturedImage?: T;
  content?: T;
  relatedvisits?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work_select".
 */
export interface WorkSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  FeaturedImage?: T;
  content?: T;
  relatedwork?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  isFeatured?: T;
  heroImage?: T;
  content?: T;
  event?:
    | T
    | {
        image?: T;
        artistImage?: T;
        singerName?: T;
        artistDesignation?: T;
        title?: T;
        description?: T;
        eventDate?: T;
        performerRole?: T;
        details?:
          | T
          | {
              duration?: T;
              ageLimit?: T;
              language?: T;
              genre?: T;
              location?: T;
            };
        category?: T;
        link?: T;
        address?: T;
      };
  relatedevents?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "investments_select".
 */
export interface InvestmentsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  FeaturedImage?: T;
  content?: T;
  relatedinvestments?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  investments?:
    | T
    | {
        sectionTitle?: T;
        sectionDescription?: T;
        sectionImage?: T;
        investmentItems?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              id?: T;
            };
        id?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "live_select".
 */
export interface LiveSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  FeaturedImage?: T;
  content?: T;
  relatedlive?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volunteer_select".
 */
export interface VolunteerSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  image?: T;
  'Voluenteer title'?: T;
  subtitle?: T;
  description?: T;
  content?: T;
  relatedvolunteer?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "innovate_select".
 */
export interface InnovateSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  FeaturedImage?: T;
  content?: T;
  innovationTitle?: T;
  innovationDescription?: T;
  innovationImage?: T;
  relatedinnovate?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visitDetails_select".
 */
export interface VisitDetailsSelect<T extends boolean = true> {
  title?: T;
  parent?: T;
  heroImage?: T;
  FeaturedImage?: T;
  content?: T;
  relatedlive?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "volunteerSlides_select".
 */
export interface VolunteerSlidesSelect<T extends boolean = true> {
  title?: T;
  slides?:
    | T
    | {
        slug?: T;
        image?: T;
        title?: T;
        subtitle?: T;
        description?: T;
        detailedContent?: T;
        video?: T;
        faq?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
        id?: T;
      };
  content?: T;
  seo?:
    | T
    | {
        metaTitle?: T;
        metaDescription?: T;
        metaKeywords?: T;
        canonicalUrl?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "social-reels_select".
 */
export interface SocialReelsSelect<T extends boolean = true> {
  title?: T;
  reels?:
    | T
    | {
        thumbnail?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "investment-categories_select".
 */
export interface InvestmentCategoriesSelect<T extends boolean = true> {
  name?: T;
  items?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "visitGroups_select".
 */
export interface VisitGroupsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  items?:
    | T
    | {
        label?: T;
        description?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * Upload the logo for the header.
   */
  logo?: (number | null) | Media;
  navItems?:
    | {
        link: {
          /**
           * Upload the header Content image.
           */
          contentImage?: (number | null) | Media;
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          content?:
            | {
                title?: string | null;
                desc?: string | null;
                link?: string | null;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
      }[]
    | null;
  socialLinks?:
    | {
        platform: string;
        url: string;
        icon: number | Media;
        id?: string | null;
      }[]
    | null;
  drawerMenu?:
    | {
        label: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  footerSections: {
    topSectionLinks?:
      | {
          category: string;
          links?:
            | {
                label: string;
                link: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    socialLinks?:
      | {
          platform: string;
          link: string;
          icon: number | Media;
          id?: string | null;
        }[]
      | null;
    partnersLogo?: (number | null) | Media;
    mainFooterLogo?: (number | null) | Media;
    designByLogo: number | Media;
    footerText: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              contentImage?: T;
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              content?:
                | T
                | {
                    title?: T;
                    desc?: T;
                    link?: T;
                    id?: T;
                  };
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  drawerMenu?:
    | T
    | {
        label?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  footerSections?:
    | T
    | {
        topSectionLinks?:
          | T
          | {
              category?: T;
              links?:
                | T
                | {
                    label?: T;
                    link?: T;
                    id?: T;
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              platform?: T;
              link?: T;
              icon?: T;
              id?: T;
            };
        partnersLogo?: T;
        mainFooterLogo?: T;
        designByLogo?: T;
        footerText?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'visits';
          value: number | Visit;
        } | null)
      | ({
          relationTo: 'work';
          value: number | Work;
        } | null)
      | ({
          relationTo: 'events';
          value: number | Event;
        } | null)
      | ({
          relationTo: 'investments';
          value: number | Investment;
        } | null)
      | ({
          relationTo: 'live';
          value: number | Live;
        } | null)
      | ({
          relationTo: 'volunteer';
          value: number | Volunteer;
        } | null)
      | ({
          relationTo: 'innovate';
          value: number | Innovate;
        } | null)
      | ({
          relationTo: 'visitDetails';
          value: number | VisitDetail;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "InvestCategoryBlock".
 */
export interface InvestCategoryBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'InvestCategoryBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}